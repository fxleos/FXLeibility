%!PS-Adobe-3.0
%Produced by poppler pdftops version: 0.24.5 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: 93x27 93 27 0 () ()
%%BoundingBox: 0 0 93 27
%%Pages: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NexaBold-Bold
%!FontType1-1.0: NexaBold-Bold
12 dict begin
/FontInfo 10 dict dup begin
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NexaBold-Bold def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-3 -206 849 724] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 76 /L put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C643C556F8CE14B4E3308
E899D0446D0ADD138D9D900CC763FAEB6A60D910BAC760492AFD3C826247EF29
9974E66F50CD821D9350A41DBA6237D9B4A9EDC2454510B8632C08C3D3BCF1B5
A718524AA84E26B538F9239575DAC0D39A8725D08CD25A1D5E99B3FBF129F7DA
8B81CED18C43E4784B147AEFBEA9221F5F196A1E574F1BF09E5804C6D5C75455
2A27930546C93FB6FBCD9D4C4E7190E5F70B28D07C349496F5E84E89F6B0A7C5
F3E81A65CB78D7FFF658139EE8EA58830544ACCB0F343DCE2E6A3E1EAB7285C2
54AECEF8CB4FD66AECE094485CF43C499572E6967D456326FDAB21BCBB02B1AA
C92FB918C17EA75041EC4842245067A5E7BEB8CB3D61C636F6027A6FBB24FCD1
C514CBA9C439D4330A3DEB5BA70FF8853D28B7A4647F76FC7A742D79B24D4510
E3A3F02B9ADD52FBA245DC4BA0A38F2E511F9FF6085F269FBC6CF98898DD8F38
6FE1D7D104B07A032EA67F7270A8D183EE2FA79595CCD592E9D2ACCECFC994BE
E8DE0FB1651846A4B4410E013BC9772880FF394717A6287EF46DBD641A7182BE
D50010E71BB7F084150FB8390DED620FDFE849D5A54D77ADFDD9745E0276987B
C9F99262B347B4A5A43479350E3F4F4490B565E0AAC7FA4DE16AF07493C9B0B0
75D616EAA0EA66F12BB7DABBF813FFE40A008844465DA4D485DA09937B9F37E9
8F4AF7C20F1459EEC5536CF620552D01B8B610748458D2CC704B7D8BEAF0C46E
0B223798E55B914E0C27993B4A7246B27FEAF87CE534F1B123808009EBAAFECE
C77062EB81AA87D8068DA36B7DD91F5E250B28664A3721598D882ED2A033A9CD
F640209F59451342E5EF136F737A60D43F9938584402262E52641E3E98FC7D52
ABB65F1C1EB78B5D4D5033CAF3CD9F11416A724420A5772C1323C5A62309C0D1
FFCF84D912F1F6DEB59951F6078C2A14EC5CFA41CD4F6DD2D5916760EEC6258A
CED0B1E5ADC9125519F5C3E1D4E0147382582E635A33B279C2E36DB204156436
299BC0AFA1960B0D2F374E2DDAD8198362F73BFBD2C856FDD8576FA40BE3B4F3
D39C0710E4B1067CFE6E48178611EAAE0CA2E6FF5CECD1AE472FA2F377A5927B
FED7A340F8420507B28109067E93AA1C8441C6B25C0A9F5F344072C839BB5306
A1635FD65F3718F4F257E6A27D1BCCE89E1B01773F9237AD014F2733825DE93D
D07FA50BA8E92E48A1A130DFB1403FFF3C88A59CC39C2F875C531ED5E89CE13F
94EDB81CFB9C8A479D23803CE113E8941A8B415FE4BF73D5B3310DD950327191
BD6D8A6DACB9B611B45DF5155B2A353950B0B5B571A6DA187BEDAEDC0FF3090A
E3D21E5E53FDF1C4D0F8F34F226FEA546AFBDCAA5273DC9274FFC41ECE4A7348
253B8B3944495C124343A5EF53745D409F6DF8A3EBF35F6EEA5D274D766C9C67
C9130888B9892EB63EAFB2553A34884653316247DD1C1892E609D673655734EC
D234774FE5583ADDAE342100A696E644F0EACCAE703CF204C00C13C4E50B313B
8D4782FA75FCE1E2EB908BF8C6FC3DF6680FA8B8E209D35158086D713DDA1D8C
79B328472B6E797E7359E01ED178D0FBB88E61602E4ECACDD614C4066FF84B33
3EE54F12C9AA853A9EC50903279974E32E3368BB6D32AD79CEF019A9429CD24A
FED29AF994EBBEB423BD5310066C3057E5DE79F178B713F927391CE1D330B04E
A90049EA104020C535F1C7041031A4799069739623392398AEAAA04843D8B7A5
F0AE782E3F4C027C3CCCAF387F2A81AA94CABB0A511B88433359C3AEF5D5E6A2
E0A0A3A7A28C841324F74C5CC22CEB2977D261919A88AC0D36A1F06AA2EF40CC
4403AA1ABC14DBFA78D17EE1EA6A2AAD7FDFBADB0B27B04935D2C015FFD6389F
BBAEC20767F7FB9BFD96262C2874C0E58BD015B2706C188E98BFB24C683EFC91
4920061B94B22C8567BAC1F807BB40A93D3CC1EB7CED4649DCCCA0F7A45F879D
274DCA050A0313A544CE61964776D862A8C8D1B2076D2142B1623EF414C22454
FACC65C9DE59A440C387E448A194B77C9F0F2C8DFFD1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NexaBold-Bold 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
false pdfSetup
%%EndSetup
%%Page: 1 1
%%PageMedia: 93x27
%%PageBoundingBox: 0 0 93 27
%%BeginPageSetup
%%PageOrientation: Portrait
93 27 pdfSetupPaper
pdfStartPage
0 0 93 27 re W
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[1 0 0 1 -44 -53] cm
q
[1 0 0 1 0 0] cm
0 0 180 132 re
W
q
[0.1 0 0 0.1 0 0] cm
/DeviceRGB {} cs
[0.1021 0.1021 0.1021] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 42.4617 54.8883] Tm
0 0 Td
/F8_0 33.7604 Tf
(P)
[22.82203
0] Tj
Q
721.918 746.621 m
687.164 728.738 l
684.719 731.898 l
673.07 746.977 649.289 754.855 630.785 754.855 c
610.645 754.855 581.457 748.41 581.457 723.09 c
581.457 698.82 616.699 695.164 634.461 693.004 c
681.418 687.289 729.336 675.305 729.336 618.086 c
729.336 562.543 678.051 543.172 630.449 543.172 c
587.469 543.172 548.98 554.789 529.781 596.492 c
527.867 600.656 l
564.23 619.496 l
566.438 615.227 l
578.73 591.43 605.766 582.266 631.125 582.266 c
654.086 582.266 685.852 589.449 685.852 618.086 c
685.852 644.992 651.406 650.883 630.828 653.238 c
586.438 658.316 538.32 669.836 538.32 724.434 c
538.32 773.641 587.445 792.758 629.441 792.934 c
664.629 793.082 700.723 783.375 719.406 750.98 c
721.918 746.621 l
f*
/DeviceRGB {} cs
[1 1 1] sc
714.512 748.582 m
696.883 779.148 662.535 788.273 628.723 788.137 c
589.426 787.969 542.383 770.68 542.383 724.434 c
542.383 672.961 588.543 662.82 630.637 658.004 c
654.07 655.32 689.914 648.258 689.914 618.086 c
689.914 586.363 656.324 577.469 630.391 577.469 c
602.762 577.469 574.461 587.813 561.438 613.023 c
533.406 598.5 l
551.574 559.027 587.961 547.973 629.711 547.973 c
674.746 547.973 723.801 565.582 723.801 618.086 c
723.801 672.258 677.762 682.813 633.141 688.238 c
612.422 690.766 575.922 695.266 575.922 723.09 c
575.922 751.523 606.883 759.656 630.051 759.656 c
649.777 759.656 675.059 751.301 687.781 734.832 c
714.512 748.582 l
f*
/DeviceRGB {} cs
[0.1021 0.1021 0.1021] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 71.559 54.8883] Tm
0 0 Td
/F8_0 33.7598 Tf
(L)
[19.749483
0] Tj
Q
592.867 715.547 m
600.52 692.891 589.574 663.82 559.809 659.762 c
616.941 643.797 l
634.68 662.52 641.859 688.961 638.48 713.961 c
592.867 715.547 l
f*
934.355 549.207 10.7891 236.164 re
f*
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 96.3672 73.2793] Tm
0 0 Td
/F8_0 7.42183 Tf
(P)
[5.017157
0] Tj
20.996 TJm
(o)
[4.26013
0] Tj
20.9968 TJm
(wer)
[6.768709
0
4.326927
0
3.221074
0] Tj
0 -9.12891 Td
(Syste)
[4.90583
0
4.163647
0
3.644119
0
2.96131
0
4.326927
0] Tj
9.98526 TJm
(ms)
[6.64996
0
3.644119
0] Tj
0 -18.25782 Td
(L)
[4.341771
0] Tj
-20.0034 TJm
(a)
[4.534738
0] Tj
9.99677 TJm
(bora)
[4.638644
0
4.26013
0
3.221074
0
4.534738
0] Tj
21.0396 TJm
(tor)
[2.96131
0
4.26013
0
3.221074
0] Tj
-31.0084 TJm
(y)
[4.163647
0] Tj
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NexaBold-Bold
%%EOF
